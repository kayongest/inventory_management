# Generated by Django 5.2.5 on 2025-09-03 16:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0002_alter_category_options_alter_item_options'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('location', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_location', models.CharField(max_length=200)),
                ('requested_by', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('fulfilled', 'Fulfilled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequestedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='StockTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('in', 'Stock In'), ('out', 'Stock Out'), ('adjust', 'Adjustment')], max_length=10)),
                ('quantity', models.IntegerField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Sub Categories',
                'ordering': ['name'],
            },
        ),
        migrations.RemoveField(
            model_name='inventorytransaction',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='inventorytransaction',
            name='item',
        ),
        migrations.DeleteModel(
            name='Supplier',
        ),
        migrations.RemoveField(
            model_name='userprofile',
            name='user',
        ),
        migrations.RemoveIndex(
            model_name='item',
            name='inventory_i_sku_3e99d5_idx',
        ),
        migrations.RemoveIndex(
            model_name='item',
            name='inventory_i_categor_dcc1fb_idx',
        ),
        migrations.RemoveIndex(
            model_name='item',
            name='inventory_i_status_25f563_idx',
        ),
        migrations.RemoveField(
            model_name='category',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='item',
            name='barcode',
        ),
        migrations.RemoveField(
            model_name='item',
            name='cost_price',
        ),
        migrations.RemoveField(
            model_name='item',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='item',
            name='last_restocked',
        ),
        migrations.RemoveField(
            model_name='item',
            name='selling_price',
        ),
        migrations.RemoveField(
            model_name='item',
            name='shelf',
        ),
        migrations.RemoveField(
            model_name='item',
            name='supplier',
        ),
        migrations.AddField(
            model_name='item',
            name='stock_controller',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='controlled_items', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='item',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.department'),
        ),
        migrations.AddField(
            model_name='itemrequest',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='itemrequest',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.department'),
        ),
        migrations.AddField(
            model_name='itemrequest',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_requests', to='inventory.event'),
        ),
        migrations.AddField(
            model_name='itemrequest',
            name='project_manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='requesteditem',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.item'),
        ),
        migrations.AddField(
            model_name='requesteditem',
            name='item_request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.itemrequest'),
        ),
        migrations.AddField(
            model_name='itemrequest',
            name='items',
            field=models.ManyToManyField(through='inventory.RequestedItem', to='inventory.item'),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.event'),
        ),
        migrations.AddField(
            model_name='stocktransaction',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='inventory.item'),
        ),
        migrations.AddField(
            model_name='subcategory',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='inventory.category'),
        ),
        migrations.AddField(
            model_name='item',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='items', to='inventory.subcategory'),
        ),
        migrations.DeleteModel(
            name='InventoryTransaction',
        ),
        migrations.DeleteModel(
            name='UserProfile',
        ),
        migrations.AlterUniqueTogether(
            name='requesteditem',
            unique_together={('item_request', 'item')},
        ),
        migrations.AlterUniqueTogether(
            name='subcategory',
            unique_together={('name', 'category')},
        ),
    ]
